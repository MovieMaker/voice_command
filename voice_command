#!/usr/bin/env python
import roslib; roslib.load_manifest('voice_command')
import rospy
from qbo_listen.msg import Listened
from qbo_talk.srv import Text2Speach
#Import ROS message to publish movements
from geometry_msgs.msg import Twist
import time

global pub

#Publish a message to move the robot 
def move(publisher,linear,ang):
    speed_command=Twist()
    speed_command.linear.x=linear
    speed_command.linear.y=0
    speed_command.linear.z=0
    speed_command.angular.x=0
    speed_command.angular.y=0
    speed_command.angular.z=ang
    publisher.publish(speed_command)
    
   
global pub
pub=rospy.Publisher('/cmd_vel', Twist)
 
global client_speak

 
def speak_this(text):
    global client_speak
    try:
        client_speak(str(text))
        rospy.loginfo("Spoken: "+text)
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e
 
def listen_callback(msg):
    listened = msg.msg
    rospy.loginfo("Listened: "+listened)
 
    if listened == "HELLO QBO":
        speak_this("Hello, human")
        time.sleep(0.5)        
    elif listened == "THIS IS HOLLY":
         speak_this("HELLO,HOLLY")
    elif listened == "TELL HOLLY GOODBYE":
         speak_this("Goodbye, HOLLY, NICE TO HAVE MET YOU")        
         time.sleep(0.5)
    elif listened == "ROBOT FORWARD":
         speak_this("OK, Robot Forward")
         move(pub,0.3,0)
         time.sleep(0.5)
    elif listened == "ROBOT BACKWARD":
         speak_this("OK, Robot Backward")
         move(pub,-0.3,0)
         time.sleep(0.5)
    elif listened == "TURN LEFT":
         speak_this("OK, Turn left")
         move(pub,0,1)
         time.sleep(0.5)
    elif listened == "TURN RIGHT":
         speak_this("OK, Turn Right")
         move(pub,0,-1) 
         time.sleep(0.5)
    elif listened == "GOOD BYE QBO":
         speak_this("Goodbye human")
    elif listened == "STOP":
         speak_this("OK, Stop")
         move(pub,0,0) 
 
if __name__ == "__main__":
    global client_speak
 
    rospy.init_node('voice_command')
    client_speak = rospy.ServiceProxy("/qbo_talk/festival_say", Text2Speach)
    rospy.Subscriber("/listen/en_questions", Listened, listen_callback)
 
    rospy.loginfo("voice_command node is launched")
    rospy.spin()

    print "That's all she wrote. Let's goe home"
    speak_this("That's all she wrote. Let's head for home.")
